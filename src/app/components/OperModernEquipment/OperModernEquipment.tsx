'use client';

import type React from 'react';

import { useState, useRef, useEffect } from 'react';
import styles from './OperModernEquipment.module.css';
import { OperModernGallery } from './OperModernGallery';

interface OperModernEquipmentProps {
  backgroundColor?: string;
}

export function OperModernEquipment({
  backgroundColor = '#f8f9fa',
}: OperModernEquipmentProps) {
  const [isExpanded, setIsExpanded] = useState(false);
  const textContentRef = useRef<HTMLDivElement>(null);
  const [showExpandButton, setShowExpandButton] = useState(true);

  useEffect(() => {
    // –ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ, —á–∏ –ø–æ—Ç—Ä—ñ–±–Ω–∞ –∫–Ω–æ–ø–∫–∞ "—Ä–æ–∑–≥–æ—Ä–Ω—É—Ç–∏"
    if (textContentRef.current) {
      const { scrollHeight, clientHeight } = textContentRef.current;
      setShowExpandButton(scrollHeight > clientHeight);
    }
  }, []);

  const toggleExpand = () => {
    setIsExpanded(!isExpanded);
  };

  return (
    <div
      className={styles.container}
      style={
        {
          backgroundColor,
          '--bg-color': backgroundColor,
        } as React.CSSProperties
      }
    >
      <h2 className={styles.title}>–°—É—á–∞—Å–Ω–µ –æ–±–ª–∞–¥–Ω–∞–Ω–Ω—è ‚Äî –≤–∏–º–æ–≥–∞ ‚Ññ2</h2>

      <div className={styles.contentContainer}>
        <div className={styles.textColumn}>
          <div
            ref={textContentRef}
            className={`${styles.textContent} ${isExpanded ? styles.textContentExpanded : styles.textContentCollapsed}`}
          >
            <div className={styles.bulletPoint}>
              <span className={styles.bulletIcon}>üîπ</span>
              <p className={styles.bulletText}>
                –£ –Ω–∞—à—ñ–π –æ–ø–µ—Ä–∞—Ü—ñ–π–Ω—ñ–π –≤–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É—é—Ç—å—Å—è{' '}
                <span className={styles.highlight}>
                  —Å—É—á–∞—Å–Ω—ñ —Ö—ñ—Ä—É—Ä–≥—ñ—á–Ω—ñ —Å–∏—Å—Ç–µ–º–∏ —Ç–∞ –æ–±–ª–∞–¥–Ω–∞–Ω–Ω—è –Ω–æ–≤–æ–≥–æ –ø–æ–∫–æ–ª—ñ–Ω–Ω—è
                </span>
                , —è–∫—ñ –∑–∞–±–µ–∑–ø–µ—á—É—é—Ç—å{' '}
                <span className={styles.highlight}>
                  –≤–∏—Å–æ–∫—É —Ç–æ—á–Ω—ñ—Å—Ç—å, –º—ñ–Ω—ñ–º–∞–ª—å–Ω—É —Ç—Ä–∞–≤–º–∞—Ç–∏—á–Ω—ñ—Å—Ç—å
                </span>{' '}
                —Ç–∞ <span className={styles.highlight}>–º–∞–∫—Å–∏–º–∞–ª—å–Ω—É –±–µ–∑–ø–µ–∫—É</span>{' '}
                –¥–ª—è –ø–∞—Ü—ñ—î–Ω—Ç–∞.
              </p>
            </div>

            <div className={styles.bulletPoint}>
              <span className={styles.bulletIcon}>üîπ</span>
              <p className={styles.bulletText}>
                –ó–∞–≤–¥—è–∫–∏ —ñ–Ω–Ω–æ–≤–∞—Ü—ñ–π–Ω–∏–º —Ç–µ—Ö–Ω–æ–ª–æ–≥—ñ—è–º –º–∏ –º–∞—î–º–æ –∑–º–æ–≥—É –ø—Ä–æ–≤–æ–¥–∏—Ç–∏
                –æ–ø–µ—Ä–∞—Ü—ñ—ó –∑ –Ω–∞–π–≤–∏—â–∏–º —Ä—ñ–≤–Ω–µ–º –∫–æ–Ω—Ç—Ä–æ–ª—é, –∞ —Ç–∞–∫–æ–∂ –µ—Ñ–µ–∫—Ç–∏–≤–Ω–æ
                –≤—ñ–¥—Å—Ç–µ–∂—É–≤–∞—Ç–∏ –≤—Å—ñ –≤–∞–∂–ª–∏–≤—ñ –ø–æ–∫–∞–∑–Ω–∏–∫–∏ –ø–∞—Ü—ñ—î–Ω—Ç–∞ –ø—ñ–¥ —á–∞—Å —ñ –ø—ñ—Å–ª—è
                –≤—Ç—Ä—É—á–∞–Ω–Ω—è.
              </p>
            </div>

            <div className={styles.bulletPoint}>
              <span className={styles.bulletIcon}>üîπ</span>
              <p className={styles.bulletText}>
                –ü–æ—Å—Ç—ñ–π–Ω–µ –æ–Ω–æ–≤–ª–µ–Ω–Ω—è —Ç–µ—Ö–Ω—ñ—á–Ω–æ—ó –±–∞–∑–∏ —Ç–∞ —Ä–µ–≥—É–ª—è—Ä–Ω–µ –æ–±—Å–ª—É–≥–æ–≤—É–≤–∞–Ω–Ω—è
                –æ–±–ª–∞–¥–Ω–∞–Ω–Ω—è ‚Äî —Ü–µ –∑–∞–ø–æ—Ä—É–∫–∞{' '}
                <span className={styles.highlight}>
                  —É—Å–ø—ñ—à–Ω–æ–≥–æ —Ä–µ–∑—É–ª—å—Ç–∞—Ç—É –∫–æ–∂–Ω–æ–≥–æ —Ö—ñ—Ä—É—Ä–≥—ñ—á–Ω–æ–≥–æ –≤—Ç—Ä—É—á–∞–Ω–Ω—è
                </span>
                .
              </p>
            </div>

            <div
              className={`${styles.fadeOverlay} ${isExpanded ? styles.fadeOverlayHidden : ''}`}
            ></div>
          </div>

          {showExpandButton && (
            <button className={styles.expandButton} onClick={toggleExpand}>
              {isExpanded ? '–ó–≥–æ—Ä–Ω—É—Ç–∏' : '–†–æ–∑–≥–æ—Ä–Ω—É—Ç–∏'}
              <span>{isExpanded ? '‚ñ≤' : '‚ñº'}</span>
            </button>
          )}
        </div>

        <div className={styles.galleryColumn}>
          <OperModernGallery />
        </div>
      </div>
    </div>
  );
}

export default OperModernEquipment;
